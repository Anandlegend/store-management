DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Inventory Management</title>
  <style>
    /* Reset and basic styles */
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background: #f3f4f9;
    }
    a {
      text-decoration: none;
      color: inherit;
    }

    /* Navbar */
    nav {
      background-color: #202939;
      color: #fff;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.75rem 1rem;
      flex-wrap: wrap;
    }
    nav .nav-links {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
    }
    nav button, nav a {
      background-color: #38425a;
      border: none;
      border-radius: 5px;
      color: #d3d9f6;
      font-weight: 600;
      padding: 7px 15px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    nav button:hover, nav a:hover {
      background-color: #556287;
    }
    nav .active {
      background-color: #384a9a;
      color: white;
    }

    nav .brand {
      font-weight: bold;
      font-size: 1.1rem;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    nav .brand img {
      height: 28px;
      width: 28px;
    }

    /* Main content */
    main {
      max-width: 1100px;
      margin: 20px auto 50px;
      padding: 0 20px;
    }
    main h2 {
      text-align: center;
      font-weight: 700;
      margin-bottom: 1rem;
      font-size: 1.5rem;
    }

    /* Search bar */
    #searchInput {
      width: 100%;
      max-width: 400px;
      margin: 0 auto 30px auto;
      display: block;
      padding: 12px 15px;
      border-radius: 6px;
      border: 1px solid #ccc;
      font-size: 1rem;
      box-sizing: border-box;
    }

    /* Product grid */
    .product-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 20px;
    }

    /* Product card */
    .product-card {
      background: white;
      padding: 15px 12px;
      border: 1px solid #ccc;
      border-radius: 8px;
      text-align: center;
      box-shadow: 1px 1px 4px rgb(0 0 0 / 0.05);
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }
    .product-card h3 {
      margin: 8px 0;
      font-size: 1.15rem;
    }
    .product-image {
      max-width: 100%;
      height: 150px;
      object-fit: contain;
      border: 1px solid #ddd;
      border-radius: 6px;
      padding: 6px;
      background: #fafafa;
      margin-bottom: 10px;
    }
    .price {
      margin: 12px 0 16px;
      font-weight: 600;
    }

    /* Buttons */
    .btn {
      font-weight: 600;
      cursor: pointer;
      border: none;
      border-radius: 5px;
      padding: 8px 14px;
      font-size: 0.9rem;
      transition: background-color 0.3s ease;
      color: white;
      user-select: none;
    }
    .btn.add {
      background-color: #28a745;
    }
    .btn.add:hover {
      background-color: #218838;
    }
    .btn.remove {
      background-color: #dc3545;
    }
    .btn.remove:hover {
      background-color: #bd2130;
    }
  </style>
</head>
<body>

  <nav>
    <div class="nav-links">
      <button class="active">Home</button>
      <button>Cart</button>
      <button>Inventory</button>
      <button>Sales</button>
      <button>Add Product</button>
    </div>
    <div class="brand">
      <span>Inventory Management</span>
      <img src="https://cdn-icons-png.flaticon.com/512/3031/3031216.png" alt="Icon" />
    </div>
  </nav>

  <main>
    <h2>Product Catalog</h2>
    <input type="search" id="searchInput" placeholder="Search products..." />

    <div id="productGrid" class="product-grid">
      <!-- Product cards injected here by JS -->
    </div>
  </main>

  <script>
    // Sample product data
    const products = [
      {
        id: 1,
        name: "Sample Item",
        price: 0.00,
        image: "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Shopping_cart_font_awesome.svg/512px-Shopping_cart_font_awesome.svg.png"
      },
      {
        id: 2,
        name: "Macbook",
        price: 200000.00,
        image: "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/mbp-spacegray-select-202206_GEO_IN?wid=904&hei=840&fmt=jpeg&qlt=80&.v=1653493200207"
      },
      {
        id: 3,
        name: "Sugar",
        price: 50.00,
        image: "https://upload.wikimedia.org/wikipedia/commons/5/53/Sugar_cane_and_brown_sugar.jpg"
      },
      {
        id: 4,
        name: "Dal",
        price: 190.00,
        image: "https://upload.wikimedia.org/wikipedia/commons/2/28/Dal_variants.png"
      },
      {
        id: 5,
        name: "Aashirvaad Atta",
        price: 500.00,
        image: "https://upload.wikimedia.org/wikipedia/commons/6/6b/Wheat_Flour_Packaged.jpg"
      },
      {
        id: 6,
        name: "Groundnut",
        price: 400.00,
        image: "https://upload.wikimedia.org/wikipedia/commons/6/64/Peanut_Seeds.JPG"
      }
    ];

    // Cart Set to track product IDs added
    const cart = new Set();

    // DOM elements
    const productGrid = document.getElementById('productGrid');
    const searchInput = document.getElementById('searchInput');

    // Render products to the grid
    function renderProducts(filter = '') {
      productGrid.innerHTML = '';
      const filteredProducts = products.filter(product =>
        product.name.toLowerCase().includes(filter.toLowerCase())
      );

      filteredProducts.forEach(product => {
        const inCart = cart.has(product.id);

        const card = document.createElement('div');
        card.className = 'product-card';

        card.innerHTML = `
          <h3>${product.name}</h3>
          <img src="${product.image}" alt="${product.name}" class="product-image" />
          <div class="price">Price: â‚¹ ${product.price.toFixed(2)}</div>
          <button class="btn ${inCart ? 'remove' : 'add'}">
            ${inCart ? 'Remove from Cart' : 'Add to Cart'}
          </button>
        `;

        // Handle button clicks
        const button = card.querySelector('button');
        button.addEventListener('click', () => {
          if (cart.has(product.id)) {
            cart.delete(product.id);
          } else {
            cart.add(product.id);
          }
          renderProducts(searchInput.value);
        });

        productGrid.appendChild(card);
      });

      // Show message if no results
      if (filteredProducts.length === 0) {
        productGrid.innerHTML = '<p style="text-align:center; color:#777;">No products found.</p>';
      }
    }

    // Initial render
    renderProducts();

    // Search input event
    searchInput.addEventListener('input', (e) => {
      renderProducts(e.target.value);
    });
  </script>

</body>
</html>

